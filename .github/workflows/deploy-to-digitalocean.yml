name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build with Docker Compose
        run: docker-compose -f docker-compose.yml build

      # Optional: If you want to push the built images to DockerHub
      - name: Push to DockerHub
        run: docker-compose -f docker-compose.yml push

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to DigitalOcean
        env:
          DIGITAL_OCEAN_SSH_KEY: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          DIGITAL_OCEAN_USER: ${{ secrets.DIGITAL_OCEAN_USER }}
          DIGITAL_OCEAN_HOST: ${{ secrets.DIGITAL_OCEAN_HOST }}
        run: |
          echo "DIGITAL_OCEAN_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # SSH into the server, pull the latest changes, and use Docker Compose to build and deploy
          ssh -o StrictHostKeyChecking=no -i private_key.pem $DIGITAL_OCEAN_USER@$DIGITAL_OCEAN_HOST <<EOF
            cd /var/www/docker-captain-php
            git pull origin main
            docker-compose build
            docker-compose up -d
          
            # Check if SSL certificates exist, if not, request them from Let's Encrypt using Certbot
            if [ ! -f /etc/letsencrypt/live/captain-php.com/fullchain.pem ]; then
              certbot --nginx --non-interactive --agree-tos --email ilja.polanskis.work@gmail.com --domains captain-php.com
            fi
          EOF
